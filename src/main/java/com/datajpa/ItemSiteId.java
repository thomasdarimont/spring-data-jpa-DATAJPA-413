package com.datajpa;

import java.io.Serializable;

// TODO: Auto-generated Javadoc
/**
 * Application identity class for: com.autopilotcontrols.db.dblayer.ItemSite Auto-generated by:
 * org.apache.openjpa.enhance.ApplicationIdTool
 */
public class ItemSiteId implements Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1822540289216799357L;

	static {
		// register persistent class in JVM
		try {
			Class.forName("com.datajpa.ItemSite");
		} catch (Exception e) {}
	}

	/** The item. */
	public ItemId item;

	private Integer site;

	/**
	 * Instantiates a new item site id.
	 */
	public ItemSiteId() {}

	/**
	 * Instantiates a new item site id.
	 *
	 * @param itemId the item id
	 * @param itemSalesDeviceId the item sales device id
	 * @param siteId the site id
	 */
	public ItemSiteId(int itemId, int itemSalesDeviceId, int siteId) {
		this.item = new ItemId(itemId, itemSalesDeviceId);
		this.site = siteId;
	}

	/**
	 * Instantiates a new item site id.
	 *
	 * @param item the item
	 * @param siteId the site id
	 */
	public ItemSiteId(ItemId item, int siteId) {
		this.item = item;
		this.site = siteId;
	}

	/**
	 * Instantiates a new item site id.
	 *
	 * @param str the str
	 */
	public ItemSiteId(String str) {
		fromString(str);
	}

	/**
	 * Gets the item.
	 *
	 * @return the item
	 */
	public ItemId getItem() {
		return item;
	}

	/**
	 * Sets the item.
	 *
	 * @param item the item to set
	 */
	public void setItemId(ItemId itemId) {
		this.item = itemId;
	}

	/**
	 * Gets the site.
	 *
	 * @return the site
	 */
	public Integer getSite() {
		return site;
	}

	/**
	 * Sets the site.
	 *
	 * @param site the site to set
	 */
	public void setSite(Integer site) {
		this.site = site;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return String.valueOf(item.getId()) + "::" + String.valueOf(item.getSalesDevice()) + "::"
				+ String.valueOf(site);
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		int rs = 17;
		rs = rs * 37 + (item == null ? 1 : item.getId());
		rs = rs * 37 + (item == null ? 1 : item.getSalesDevice());
		rs = rs * 37 + site;
		return rs;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null || obj.getClass() != getClass())
			return false;

		ItemSiteId other = (ItemSiteId) obj;
		if (item == null && other.item != null)
			return false;
		if (item != null && other.item == null)
			return false;

		if (item == null && other.item == null) {
			return (site == other.site);
		}

		return (item.getId().equals(other.item.getId())) && (item.salesDevice.equals(other.item.salesDevice))
				&& (site.equals(other.site));
	}

	/**
	 * From string.
	 *
	 * @param str the str
	 */
	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();

		ItemId itemId = new ItemId();

		itemId.setId(Integer.parseInt(str));
		str = toke.nextToken();
		itemId.setSalesDevice(Integer.parseInt(str));

		this.item = itemId;
		str = toke.nextToken();
		site = Integer.parseInt(str);
	}

	/**
	 * The Class Tokenizer.
	 */
	protected static class Tokenizer {

		/** The str. */
		private final String str;

		/** The last. */
		private int last;

		/**
		 * Instantiates a new tokenizer.
		 *
		 * @param str the str
		 */
		public Tokenizer(String str) {
			this.str = str;
		}

		/**
		 * Next token.
		 *
		 * @return the string
		 */
		public String nextToken() {
			int next = str.indexOf("::", last);
			String part;
			if (next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}
