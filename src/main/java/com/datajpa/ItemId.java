package com.datajpa;

import java.io.Serializable;

// TODO: Auto-generated Javadoc
/**
 * Application identity class for: com.autopilotcontrols.db.dblayer.Item
 * 
 * Auto-generated by: org.apache.openjpa.enhance.ApplicationIdTool
 */
public class ItemId implements Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = -2986871112875450036L;

	static {
		// register persistent class in JVM
		try {
			Class.forName("com.datajpa.Item");
		} catch (Exception e) {
		}
	}

	/** The id. */
	public Integer id;
	
	/** The sales device. */
	public Integer salesDevice;

	/**
	 * Instantiates a new item id.
	 */
	public ItemId() {
	}

	
	/**
	 * Instantiates a new item id.
	 *
	 * @param id the id
	 * @param salesDevice the sales device
	 */
	public ItemId(Integer id, Integer salesDevice) {
		super();
		this.id = id;
		this.salesDevice = salesDevice;
	}

	/**
	 * Instantiates a new item id.
	 *
	 * @param id the id
	 * @param salesDevice the sales device
	 */
	public ItemId(Integer id, SalesDevice salesDevice) {
		super();
		this.id = id;
		this.salesDevice = salesDevice.getId();
	}
	

	/**
	 * Instantiates a new item id.
	 *
	 * @param str the str
	 */
	public ItemId(String str) {
		fromString(str);
	}
	
	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	public Integer getId() {
		return id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Gets the sales device.
	 *
	 * @return the salesDevice
	 */
	public Integer getSalesDevice() {
		return salesDevice;
	}


	/**
	 * Sets the sales device.
	 *
	 * @param salesDevice the salesDevice to set
	 */
	public void setSalesDevice(Integer salesDevice) {
		this.salesDevice = salesDevice;
	}


	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return String.valueOf(id) + "::" + String.valueOf(salesDevice);
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		int rs = 17;
		if (id != null)
			rs = rs * 37 + id;
		if (salesDevice != null)
			rs = rs * 37 + salesDevice;
		return rs;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null || obj.getClass() != getClass())
			return false;

		ItemId other = (ItemId) obj;
		return (id == other.id)
				&& (salesDevice == other.salesDevice);
	}

	/**
	 * From string.
	 *
	 * @param str the str
	 */
	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();
		id = Integer.parseInt(str);
		str = toke.nextToken();
		salesDevice = Integer.parseInt(str);
	}

	/**
	 * The Class Tokenizer.
	 */
	protected static class Tokenizer {
		
		/** The str. */
		private final String str;
		
		/** The last. */
		private int last;

		/**
		 * Instantiates a new tokenizer.
		 *
		 * @param str the str
		 */
		public Tokenizer(String str) {
			this.str = str;
		}

		/**
		 * Next token.
		 *
		 * @return the string
		 */
		public String nextToken() {
			int next = str.indexOf("::", last);
			String part;
			if (next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}